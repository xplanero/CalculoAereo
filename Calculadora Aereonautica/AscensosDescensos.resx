<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AGwAAABtAAAAbQAAAGwAAABtAAAAbQAAAG0AAABtAAAAbQAAAGoAAACoAAAA+gAAAPkAAABeAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAPAAAAAAAAABAAAAAIAAAABQAAABYAAAACAAAACwAA
        AAwAAAAAAAAAEQAAAAIAAAADAAAAEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAADUAAAA+gAA
        AE8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXQAAAJcAAAAMAAAAnQAAAFIAAAAsAAAAsAAA
        ABgAAAByAAAAhAAAABAAAACqAAAAPQAAAEAAAACoAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAyAAAA3gAA
        AHoAAAD6AAAATwAAAAAAAAAAAAAAAgAAAAIAAAACAAAAAgAAAAEAAAAeAAAAMQAAAAUAAAAzAAAAGwAA
        AA8AAAA5AAAACAAAACUAAAArAAAABgAAADcAAAAUAAAAFQAAADYAAAAGAAAAAgAAAAQAAAAPAAAASgAA
        AM4AAAC0AAAAFQAAAPoAAABOAAAACwAAAIsAAACvAAAArgAAAK4AAACuAAAArgAAAK0AAACrAAAAqgAA
        AKoAAACtAAAArgAAAKoAAACqAAAAqQAAAKwAAACuAAAAqwAAAK0AAACtAAAAqwAAAK4AAACuAAAAswAA
        AMwAAADlAAAApQAAAB8AAAAAAAAA+gAAAE0AAAApAAAA6QAAAK8AAACVAAAAlwAAAJcAAACXAAAAlQAA
        AKUAAAD5AAAA0AAAAJYAAACUAAAAqAAAAPcAAAD2AAAAqAAAAJYAAACXAAAAlwAAAJcAAACXAAAAlwAA
        AJcAAACSAAAAdgAAADwAAAAHAAAAAAAAAAAAAAD6AAAASwAAAEoAAADfAAAAIwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAdgAAAN8AAAA0AAAAAAAAACEAAACuAAAA3AAAAFgAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPsAAABXAAAAmQAAALsAAAAJAAAAAAAA
        AAAAAAAAAAAAAAAAADsAAADkAAAAbgAAAAAAAAA/AAAAzgAAAMgAAAA3AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAANkAAADlAAAAVAAA
        AAAAAAAAAAAAAAAAAAAAAAATAAAAvgAAAK4AAAAPAAAAYgAAAOMAAACmAAAAHQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAiQAA
        AFEAAAADAAAAAAAAAAAAAAAAAAAAAAAAAHgAAADaAAAAPQAAAIYAAADoAAAAgAAAAAwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAArAAAAMkAAACxAAAA3wAAAFoAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJAAAAygAAALkAAAA4AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAMAAAADAAAAAoAAAAQAAAACgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAFgAAABsAAABpAAAAvwAAAMkAAADIAAAAxQAA
        AIAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAJ8AAADXAAAA2wAAAOgAAACUAAAAdQAA
        AHUAAACFAAAA4wAAAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2AAAAzwAAAGUAAABaAAAAQgAA
        AAMAAAAAAAAAAAAAAAAAAACqAAAAqAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPQAAABmAAAAAAAA
        AAAAAAAAAAAAAAAAAB4AAAB+AAAAmAAAAOUAAABqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1gAA
        AKoAAAApAAAAIQAAACEAAAAnAAAAngAAAOoAAAC2AAAAcAAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABLAAAAzwAAAOAAAADbAAAA2wAAAOAAAADWAAAATwAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAiAAAAUQAAAFgAAABYAAAAUwAAACYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///8AP8DgAD+AYAA/gCAAP4AgAD+AAAA/gAAAP4AAAH/AAAHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAB//AAA//wQAf/8AAf//AAP//wAH
        //8AB///AAf//wAH//8AB///AA///wAf//8=
</value>
  </data>
</root>